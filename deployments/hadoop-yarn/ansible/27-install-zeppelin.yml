#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#


- name: "Install Zeppelin"
  hosts: zeppelin
  gather_facts: true
  vars_files:
    - config/ansible.yml
    - config/spark.yml
    - config/hadoop.yml
    - config/zeppelin.yml
    - /tmp/ansible-vars.yml
  vars:
    zeppelinconfig: |
            <?xml version="1.0"?>
            <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
            <configuration>

                <property>
                    <name>zeppelin.server.addr</name>
                    <value>0.0.0.0</value>
                    <description>Server binding address</description>
                </property>

                <property>
                    <name>zeppelin.server.port</name>
                    <value>8080</value>
                    <description>Server port.</description>
                </property>

                <property>
                    <name>zeppelin.server.ssl.port</name>
                    <value>8443</value>
                    <description>Server ssl port. (used when ssl property is set to true)</description>
                </property>

                <property>
                    <name>zeppelin.server.context.path</name>
                    <value>/</value>
                    <description>Context Path of the Web Application</description>
                </property>

                <property>
                    <name>zeppelin.war.tempdir</name>
                    <value>webapps</value>
                    <description>Location of jetty temporary directory</description>
                </property>

                <property>
                    <name>zeppelin.notebook.dir</name>
                    <value>notebook</value>
                    <description>path or URI for notebook persist</description>
                </property>

                <property>
                    <name>zeppelin.notebook.homescreen</name>
                    <value></value>
                    <description>id of notebook to be displayed in homescreen. ex) 2A94M5J1Z Empty value displays default home screen</description>
                </property>

                <property>
                    <name>zeppelin.notebook.homescreen.hide</name>
                    <value>false</value>
                    <description>hide homescreen notebook from list when this value set to true</description>
                </property>

                <property>
                    <name>zeppelin.notebook.storage</name>
                    <value>org.apache.zeppelin.notebook.repo.GitNotebookRepo</value>
                    <description>versioned notebook persistence layer implementation</description>
                </property>

                <property>
                    <name>zeppelin.notebook.one.way.sync</name>
                    <value>false</value>
                    <description>If there are multiple notebook storages, should we treat the first one as the only source of truth?</description>
                </property>

                <property>
                    <name>zeppelin.interpreter.dir</name>
                    <value>interpreter</value>
                    <description>Interpreter implementation base directory</description>
                </property>

                <property>
                    <name>zeppelin.interpreter.localRepo</name>
                    <value>local-repo</value>
                    <description>Local repository for interpreter's additional dependency loading</description>
                </property>

                <property>
                    <name>zeppelin.interpreter.dep.mvnRepo</name>
                    <value>http://repo1.maven.org/maven2/</value>
                    <description>Remote principal repository for interpreter's additional dependency loading</description>
                </property>

                <property>
                    <name>zeppelin.dep.localrepo</name>
                    <value>local-repo</value>
                    <description>Local repository for dependency loader</description>
                </property>

                <property>
                    <name>zeppelin.helium.node.installer.url</name>
                    <value>https://nodejs.org/dist/</value>
                    <description>Remote Node installer url for Helium dependency loader</description>
                </property>

                <property>
                    <name>zeppelin.helium.npm.installer.url</name>
                    <value>http://registry.npmjs.org/</value>
                    <description>Remote Npm installer url for Helium dependency loader</description>
                </property>

                <property>
                    <name>zeppelin.helium.yarnpkg.installer.url</name>
                    <value>https://github.com/yarnpkg/yarn/releases/download/</value>
                    <description>Remote Yarn package installer url for Helium dependency loader</description>
                </property>

                <property>
                    <name>zeppelin.interpreters</name>
                    <value>org.apache.zeppelin.spark.SparkInterpreter,org.apache.zeppelin.spark.PySparkInterpreter,org.apache.zeppelin.rinterpreter.RRepl,org.apache.zeppelin.rinterpreter.KnitR,org.apache.zeppelin.spark.SparkRInterpreter,org.apache.zeppelin.spark.SparkSqlInterpreter,org.apache.zeppelin.spark.DepInterpreter,org.apache.zeppelin.markdown.Markdown,org.apache.zeppelin.angular.AngularInterpreter,org.apache.zeppelin.shell.ShellInterpreter,org.apache.zeppelin.file.HDFSFileInterpreter,org.apache.zeppelin.flink.FlinkInterpreter,,org.apache.zeppelin.python.PythonInterpreter,org.apache.zeppelin.python.PythonInterpreterPandasSql,org.apache.zeppelin.python.PythonCondaInterpreter,org.apache.zeppelin.python.PythonDockerInterpreter,org.apache.zeppelin.lens.LensInterpreter,org.apache.zeppelin.ignite.IgniteInterpreter,org.apache.zeppelin.ignite.IgniteSqlInterpreter,org.apache.zeppelin.cassandra.CassandraInterpreter,org.apache.zeppelin.geode.GeodeOqlInterpreter,org.apache.zeppelin.jdbc.JDBCInterpreter,org.apache.zeppelin.kylin.KylinInterpreter,org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter,org.apache.zeppelin.scalding.ScaldingInterpreter,org.apache.zeppelin.alluxio.AlluxioInterpreter,org.apache.zeppelin.hbase.HbaseInterpreter,org.apache.zeppelin.livy.LivySparkInterpreter,org.apache.zeppelin.livy.LivyPySparkInterpreter,org.apache.zeppelin.livy.LivyPySpark3Interpreter,org.apache.zeppelin.livy.LivySparkRInterpreter,org.apache.zeppelin.livy.LivySparkSQLInterpreter,org.apache.zeppelin.bigquery.BigQueryInterpreter,org.apache.zeppelin.beam.BeamInterpreter,org.apache.zeppelin.pig.PigInterpreter,org.apache.zeppelin.pig.PigQueryInterpreter,org.apache.zeppelin.scio.ScioInterpreter,org.apache.zeppelin.groovy.GroovyInterpreter</value>
                    <description>Comma separated interpreter configurations. First interpreter become a default</description>
                </property>

                <property>
                    <name>zeppelin.interpreter.group.order</name>
                    <value>spark,md,angular,sh,livy,alluxio,file,psql,flink,python,ignite,lens,cassandra,geode,kylin,elasticsearch,scalding,jdbc,hbase,bigquery,beam,groovy</value>
                   <description></description>
                </property>

                <property>
                    <name>zeppelin.interpreter.connect.timeout</name>
                    <value>30000</value>
                    <description>Interpreter process connect timeout in msec.</description>
                </property>

                <property>
                    <name>zeppelin.websocket.max.text.message.size</name>
                    <value>10240000</value>
                    <description></description>
                </property>

                <property>
                    <name>zeppelin.interpreter.output.limit</name>
                    <value>10240000</value>
                    <description>Output message from interpreter exceeding the limit will be truncated</description>
                </property>

                <property>
                    <name>zeppelin.ssl</name>
                    <value>false</value>
                    <description>Should SSL be used by the servers?</description>
                </property>

                <property>
                    <name>zeppelin.ssl.client.auth</name>
                    <value>false</value>
                    <description>Should client authentication be used for SSL connections?</description>
                </property>

                <property>
                    <name>zeppelin.anonymous.allowed</name>
                    <value>true</value>
                    <description>Anonymous user allowed by default</description>
                </property>

                <property>
                    <name>zeppelin.notebook.default.owner.username</name>
                    <value></value>
                    <description>Set owner role by default</description>
                </property>

                <property>
                    <name>zeppelin.notebook.public</name>
                    <value>false</value>
                    <description>Make notebook public by default when created, private otherwise</description>
                </property>

                <property>
                    <name>zeppelin.server.default.dir.allowed</name>
                    <value>false</value>
                    <description>Enable directory listings on server.</description>
                </property>

                <property>
                    <name>zeppelin.interpreter.exclude</name>
                    <value>angular,livy,alluxio,file,psql,flink,ignite,lens,cassandra,geode,kylin,elasticsearch,scalding,jdbc,hbase,bigquery,beam,groovy,flink-cmd,hazelcastjet,influxdb,java,jupyter,kotlin,ksql,mongodb,neo4j,pig,r,sap,spark-submit,sparql,submarine</value>
                    <description>All the inteprreters that you would like to exclude. You can only specify either 'zeppelin.interpreter.include' or 'zeppelin.interpreter.exclude'. Specifying them together is not allowed.</description>
                </property>

                <property>
                    <name>zeppelin.jobmanager.enable</name>
                    <value>true</value>
                    <description>The Job tab in zeppelin page seems not so useful instead it cost lots of memory and affect the performance. Disable it can save lots of memory</description>
                </property>

            </configuration>

  tasks:
    - name: "Download and install Zeppelin"
      unarchive:
        src: "https://downloads.apache.org/zeppelin/{{zepvers}}/{{zepname}}.tgz"
        dest: "{{zepbase}}"
        remote_src: true

   - name: "Symlink Zeppelin"
     ansible.builtin.file:
       src:  "{{zepbase}}/{{zepname}}"
       dest: "{{zepbase}}/zeppelin"
       state: link

    - name: "Create [/etc/profile.d/zeppelin.sh]"
      become: true
      blockinfile:
        dest:  '/etc/profile.d/zeppelin.sh'
        state: present
        create: true
        owner: 'root'
        group: 'root'
        mode:  'u=rw,g=r,o=r'
        insertafter: 'EOF'
        block: |
          export SPARK_HOME={{sphome}}
          export HADOOP_CONF_DIR={{hdhome}}/etc/hadoop
          export MASTER=yarn-client

    - name: "Create [{{zephome}}/conf/zeppelin-env.sh]"
      become: true
      blockinfile:
        dest:  '{{zephome}}/conf/zeppelin-env.sh'
        state: present
        create: true
        owner: "{{zepuser}}"
        group: "{{zepuser}}"
        mode:  'u=rw,g=r,o=r'
        insertafter: 'EOF'
        block: |
          export SPARK_HOME={{sphome}}
          export HADOOP_CONF_DIR={{hdhome}}/etc/hadoop
          export MASTER=yarn-client

    - name: "Create a Zeppelin configuration"
      copy:
        owner: "{{zepuser}}"
        group: "{{zepuser}}"
        mode:  'u=rw,g=r,o=r'
        dest:  "{{zephome}}/conf/zeppelin-site.xml"
        content: "{{ zeppelinconfig }}"
      tags:
        - always

    - name: "Create Zeppelin Maven directory"
      become: true
      file:
        path: "{{zepmavendest}}"
        state: directory
        owner: "{{zepuser}}"
        group: "{{zepuser}}"
        mode: 0775

    - name: "Create [/etc/profile.d/zeppelin.sh]"
      become: true
      ansible.builtin.blockinfile:
        dest:  '/etc/profile.d/zeppelin.sh'
        state: present
        owner: 'root'
        group: 'root'
        mode:  'u=rw,g=r,o=r'
        create: true
        insertafter: 'EOF'
        marker: '# {mark} Ansible managed configuration'
        block: |
          export PATH=${PATH}:{{zephome}}/bin

    - name: "Add group for Zeppelin Users"
      become: true
      command: groupadd {{ zepusersgroup }}

