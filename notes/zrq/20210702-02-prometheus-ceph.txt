#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2021, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#


    Target:
    
        Preparing for the NAM 2021 talk.

    Resources:
    
        Slides prepared by Nigel
        https://docs.google.com/presentation/d/1T71zFaNjVHvZ-RxqTpqj8qiuPrZY0XmCPvbyVzen7G0


# -----------------------------------------------------
# Create a new branch.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE}"

        newbranch=$(date '+%Y%m%d')-zrq-prometheus

        git checkout -b "${newbranch:?}"

        git push --set-upstream origin "${newbranch:?}"

    popd


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2020.12.02 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudname=gaia-dev


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    1m4.828s
    >   user    0m27.166s
    >   sys     0m3.811s


# -----------------------------------------------------
# Create everything, using a standard config.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            'cclake-medium-04'

    >   real    51m10.768s
    >   user    12m27.418s
    >   sys     4m10.148s


# -----------------------------------------------------
# Check the deployment status.
#[root@ansibler]

    cat '/tmp/aglais-status.yml'

    >   aglais:
    >     status:
    >       deployment:
    >         type: hadoop-yarn
    >         conf: cclake-medium-04
    >         name: gaia-dev-20210702
    >         date: 20210702T160703
    >     spec:
    >       openstack:
    >         cloud: gaia-dev


# -----------------------------------------------------
# Add the Zeppelin user accounts.
#[root@ansibler]

    ssh zeppelin

        pushd "${HOME}"
        ln -s "zeppelin-0.8.2-bin-all" "zeppelin"

            pushd "zeppelin"

                # Manual edit to add names and passwords
                vi conf/shiro.ini

                # Restart Zeppelin for the changes to take.
                ./bin/zeppelin-daemon.sh restart

            popd
        popd
    exit


# -----------------------------------------------------
# Get the public IP address of our Zeppelin node.
#[root@ansibler]

    deployname=$(
        yq read \
            '/tmp/aglais-status.yml' \
                'aglais.status.deployment.name'
        )

    zeppelinid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            server list \
                --format json \
        | jq -r '.[] | select(.Name == "'${deployname:?}'-zeppelin") | .ID'
        )

    zeppelinip=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            server show \
                --format json \
                "${zeppelinid:?}" \
        | jq -r '.addresses' \
        | sed '
            s/[[:space:]]//
            s/.*=\(.*\)/\1/
            s/.*,\(.*\)/\1/
            '
        )

cat << EOF
Zeppelin ID [${zeppelinid:?}]
Zeppelin IP [${zeppelinip:?}]
EOF

    >   Zeppelin ID [34d76edd-7326-4b03-8853-e4efce92202c]
    >   Zeppelin IP [128.232.227.227]


# -----------------------------------------------------
# Update our DNS entries.
#[root@ansibler]

    ssh root@infra-ops.aglais.uk

        vi /var/aglais/dnsmasq/hosts/gaia-dev.hosts

        ~   128.232.227.227  zeppelin.gaia-dev.aglais.uk


        podman kill --signal SIGHUP dnsmasq

        podman logs dnsmasq | tail

        exit

    >   dnsmasq[1]: read /etc/dnsmasq/hosts/gaia-prod.hosts - 1 addresses
    >   dnsmasq[1]: read /etc/dnsmasq/hosts/gaia-test.hosts - 1 addresses
    >   dnsmasq[1]: read /etc/dnsmasq/hosts/gaia-dev.hosts - 1 addresses


# -----------------------------------------------------
# Login to the Zeppelin node and check the shares and links.
#[root@ansibler]

    ssh "fedora@zeppelin.${cloudname:?}.aglais.uk"

        ls -alh /data/gaia/

    >   drwxr-xr-x. 2 root root 4.0K Jul  2 16:50 GDR2
    >   drwxr-xr-x. 3 root root 473G May 19 00:45 GDR2_6514
    >   drwxr-xr-x. 2 root root 4.0K Jul  2 16:52 GEDR3
    >   drwxr-xr-x. 3 root root 533G May 14 11:23 GEDR3_11932
    >   drwxr-xr-x. 6 root root 959G May 14 11:28 GEDR3_2048
    >   drwxr-xr-x. 6 root root 562G May 14 12:28 GEDR3_4096
    >   drwxr-xr-x. 6 root root 553G May 18 00:50 GEDR3_8192
    >   lrwxrwxrwx. 1 root root   20 Jul  2 16:52 edr2 -> /data/gaia/GDR2_6514
    >   lrwxrwxrwx. 1 root root   22 Jul  2 16:53 edr3 -> /data/gaia/GEDR3_11932


        ls -alh /data/gaia/GDR2_6514

    >   drwxr-xr-x. 2 root root 473G May 14 11:06 GDR2_6514_GAIASOURCE
    >   lrwxrwxrwx. 1 root root   20 May 19 00:45 GDR2_GAIASOURCE -> GDR2_6514_GAIASOURCE


        ls -alh /data/gaia/GEDR3

    >   lrwxrwxrwx. 1 root root   57 Jul  2 16:52 GEDR3_2MASSPSC_BEST_NEIGHBOURS -> /data/gaia/GEDR3_2048/GEDR3_2048_2MASSPSC_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   56 Jul  2 16:51 GEDR3_ALLWISE_BEST_NEIGHBOURS -> /data/gaia/GEDR3_2048/GEDR3_2048_ALLWISE_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   43 Jul  2 16:51 GEDR3_GAIASOURCE -> /data/gaia/GEDR3_2048/GEDR3_2048_GAIASOURCE
    >   lrwxrwxrwx. 1 root root   52 Jul  2 16:51 GEDR3_PS1_BEST_NEIGHBOURS -> /data/gaia/GEDR3_2048/GEDR3_2048_PS1_BEST_NEIGHBOURS


        ls -alh /data/gaia/GEDR3_11932

    >   drwxr-xr-x. 2 root root 533G May 14 11:19 GEDR3_11932_GAIASOURCE
    >   lrwxrwxrwx. 1 root root   22 May 14 11:11 GEDR3_GAIASOURCE -> GEDR3_11932_GAIASOURCE


        ls -alh /data/gaia/GEDR3_2048

    >   drwxr-xr-x. 2 root root  60G May 11 05:32 GEDR3_2048_2MASSPSC_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root 177G May 11 06:31 GEDR3_2048_ALLWISE_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root 561G May 11 05:07 GEDR3_2048_GAIASOURCE
    >   drwxr-xr-x. 2 root root 163G May 11 07:27 GEDR3_2048_PS1_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   35 May 14 11:28 GEDR3_2MASSPSC_BEST_NEIGHBOURS -> GEDR3_2048_2MASSPSC_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   34 May 14 11:28 GEDR3_ALLWISE_BEST_NEIGHBOURS -> GEDR3_2048_ALLWISE_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   21 May 14 11:27 GEDR3_GAIASOURCE -> GEDR3_2048_GAIASOURCE
    >   lrwxrwxrwx. 1 root root   30 May 14 11:28 GEDR3_PS1_BEST_NEIGHBOURS -> GEDR3_2048_PS1_BEST_NEIGHBOURS


        ls -alh /data/gaia/GEDR3_4096

    >   lrwxrwxrwx. 1 root root   35 May 14 12:28 GEDR3_2MASSPSC_BEST_NEIGHBOURS -> GEDR3_4096_2MASSPSC_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root    0 May 14 12:15 GEDR3_4096_2MASSPSC_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root    0 May 14 12:15 GEDR3_4096_ALLWISE_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root 562G May 14 17:15 GEDR3_4096_GAIASOURCE
    >   drwxr-xr-x. 2 root root    0 May 14 12:15 GEDR3_4096_PS1_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   34 May 14 12:28 GEDR3_ALLWISE_BEST_NEIGHBOURS -> GEDR3_4096_ALLWISE_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   21 May 14 12:28 GEDR3_GAIASOURCE -> GEDR3_4096_GAIASOURCE
    >   lrwxrwxrwx. 1 root root   30 May 14 12:28 GEDR3_PS1_BEST_NEIGHBOURS -> GEDR3_4096_PS1_BEST_NEIGHBOURS


        ls -alh /data/gaia/GEDR3_8192

    >   lrwxrwxrwx. 1 root root   35 May 18 00:50 GEDR3_2MASSPSC_BEST_NEIGHBOURS -> GEDR3_8192_2MASSPSC_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root    0 May 18 00:50 GEDR3_8192_2MASSPSC_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root    0 May 18 00:50 GEDR3_8192_ALLWISE_BEST_NEIGHBOURS
    >   drwxr-xr-x. 2 root root 553G May 18 05:25 GEDR3_8192_GAIASOURCE
    >   drwxr-xr-x. 2 root root    0 May 18 00:50 GEDR3_8192_PS1_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   34 May 18 00:50 GEDR3_ALLWISE_BEST_NEIGHBOURS -> GEDR3_8192_ALLWISE_BEST_NEIGHBOURS
    >   lrwxrwxrwx. 1 root root   21 May 18 00:50 GEDR3_GAIASOURCE -> GEDR3_8192_GAIASOURCE
    >   lrwxrwxrwx. 1 root root   30 May 18 00:50 GEDR3_PS1_BEST_NEIGHBOURS -> GEDR3_8192_PS1_BEST_NEIGHBOURS


# -----------------------------------------------------
# Login to the Zeppelin node and add the notebooks from github.
#[root@ansibler]

    ssh "fedora@zeppelin.${cloudname:?}.aglais.uk"

        pushd /home/fedora/zeppelin

            mv notebook \
               notebook-origin

	        git clone https://github.com/wfau/aglais-notebooks.git notebook

cat > 'notebook/.git/hooks/post-commit' << EOF
#!/bin/sh
git push 
EOF

	        chmod +x notebook/.git/hooks/post-commit
	        bin/zeppelin-daemon.sh restart

    >   Zeppelin stop                                              [  OK  ]
    >   Zeppelin start                                             [  OK  ]


# -----------------------------------------------------
# -----------------------------------------------------
# Login via Firefox
#[user@desktop]

    firefox --new-window "http://zeppelin.gaia-dev.aglais.uk:8080/" &


# -----------------------------------------------------
# -----------------------------------------------------

    Run the test againts the new data ....

    Good astrometric solutions via ML Random Forest classifier
    http://zeppelin.gaia-dev.aglais.uk:8080/#/notebook/2G5NU6HTK
    

        #
        # Change the column name.
        astrometric_features = [
            ....
            'astrometric_sigma5d_max',
            ....
            ]

        #
        # Using the 2048 partition data.
        data_store = "file:////data/gaia/GEDR3/"

        #
        # Starting a new test, (500 trees on 100% data)
        #

        First cell - Took 0 sec. Last updated by zrq at July 02 2021, 6:22:38 PM.
        Last cell  - Took 0 sec. Last updated by zrq at July 02 2021, 6:34:26 PM.

        datediff --format '%Hhr %Mmin %Ssec' '6:22:38' '6:34:26'

        11min 48sec


        First cell - Took 0 sec. Last updated by zrq at July 02 2021, 8:29:35 PM.
        Last cell  - Took 0 sec. Last updated by zrq at July 02 2021, 8:41:20 PM.

        datediff --format '%Hhr %Mmin %Ssec' '8:29:35' '8:41:20'

        11min 45sec



# -----------------------------------------------------
# -----------------------------------------------------
# Create a new container with port 3000 published.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        atolmis/ansible-client:2020.12.02 \
        bash


# -----------------------------------------------------
# Set the target cloud.
#[root@ansibler]

    cloudname=gaia-dev


# -----------------------------------------------------
# Create our Ansible tmp vars.
#[root@ansibler]

    cat > /tmp/ansible-vars.yml << EOF
aglais:
  status:
    deployment:
      type: hadoop-yarn
      conf: cclake-medium-04
      name: gaia-dev-20210702
      date: 20210702T160703
  spec:
    openstack:
      cloud: gaia-dev
EOF


# -----------------------------------------------------
# Update our local ssh config.
#[root@ansibler]

    pushd /deployments/hadoop-yarn/ansible

        ansible-playbook \
            --verbose \
            --verbose \
            --inventory config/cclake-medium-04.yml \
            '05-config-ssh.yml'

    popd

    ssh zeppelin \
        '
        date
        hostname
        '

    >   Fri Jul  2 19:00:57 UTC 2021
    >   gaia-dev-20210702-zeppelin.novalocal


# -----------------------------------------------------
# Tunnel connection to monitor node
# https://linuxize.com/post/how-to-setup-ssh-tunneling/
#[root@ansibler]

    ssh -f -N -L '3000:monitor:3000' fedora@zeppelin


# -----------------------------------------------------
# Open Grafana in Firefox
#[user@desktop]

    firefox --new-window 'http://localhost:3000/login' &

        username: admin
        pass: admin


    # Optionally set new password in the next page
        waiXo9ne aveePh2j

# -----------------------------------------------------
# Add a new Data Source
# From Stelios's notes

    # Click on button "Data Sources: Add your first data source"
    # Select Prometheus as the Data source
    # Set the url to: http://monitor:9090
    # Set the Scrape interval to 5s


# -----------------------------------------------------
# Add a new Dashboard
# From Stelios's notes

    # Import Dashboards for Node Exporter metrics:
    # https://grafana.com/grafana/dashboards/11074

        # To use this just copy the ID (11074) and navigate to (+ / Import) on the left menubar and paste into the textfield.
        # In the next screen, set the VictoriaMetrics to the Prometheus Data source we created earlier, and click "Import"

        # Success, we see a number of panels with metrics for Cpu, Memory etc..


    # Edit the filesystem monitors.
    # Several of the metrics limit the file system type 'fstype' to 'ext.*|xfs'
    # Update this to 'ext.*|btrfs' to include the discs we created.
    
    node_filesystem_free_bytes{instance=~'$node',fstype=~"ext.*|xfs",mountpoint !~".*pod.*"}
    node_filesystem_free_bytes{instance=~'$node',fstype=~"ext.*|btrfs",mountpoint !~".*pod.*"}

    # Getting metrics for vda, vdb and vdc.

    Disc IOps 
        vdb 85.92 
        vdb ...
        
    CPU%        min    max
        iowait   0% 55.78% <--




# -----------------------------------------------------
# -----------------------------------------------------

    # Fuse mount
    cat /etc/fstab

    >   ....
    >   ....
    >   none /data/gaia/GEDR3_2048 fuse.ceph ceph.id=aglais-gaia-edr3-20210510-ro,ceph.client_mountpoint=/volumes/_nogroup/622bb766-6ae2-4aa5-ad9c-536a71012245,ceph.conf=/etc/ceph/aglais-gaia-edr3-20210510-ro.conf,ceph.keyring=/etc/ceph/aglais-gaia-edr3-20210510-ro.keyring,async,auto,nodev,noexec,nosuid,ro,_netdev 0 0


    none
    /data/gaia/GEDR3_2048
    fuse.ceph ceph.id=aglais-gaia-edr3-20210510-ro,
    ceph.client_mountpoint=/volumes/_nogroup/622bb766-6ae2-4aa5-ad9c-536a71012245,
    ceph.conf=/etc/ceph/aglais-gaia-edr3-20210510-ro.conf,
    ceph.keyring=/etc/ceph/aglais-gaia-edr3-20210510-ro.keyring,
    async,auto,nodev,noexec,nosuid,ro,_netdev 0 0


    # Kernel mount
    cat /etc/fstab

    >   ....
    >   ....
    >   10.206.1.5:6789,10.206.1.6:6789,10.206.1.7:6789:/volumes/_nogroup/622bb766-6ae2-4aa5-ad9c-536a71012245 /data/albert ceph name=aglais-gaia-edr3-20210510-ro,secret=ceph-secret,async,auto,nodev,noexec,nosuid,ro,_netdev 0 0


cat /etc/ceph/aglais-gaia-edr3-20210510-ro.conf

    >   # BEGIN ANSIBLE MANAGED BLOCK
    >   [client]
    >       client quota = true
    >       mon host = 10.206.1.5:6789,10.206.1.6:6789,10.206.1.7:6789
    >   # END ANSIBLE MANAGED BLOCK

cat /etc/ceph/aglais-gaia-edr3-20210510-ro.keyring

    >   # BEGIN ANSIBLE MANAGED BLOCK
    >   [client.aglais-gaia-edr3-20210510-ro]
    >       key = ceph-secret
    >   # END ANSIBLE MANAGED BLOCK

# -----------------------------------------------------
# -----------------------------------------------------

https://docs.ceph.com/en/latest/cephfs/mount-using-kernel-driver/

/etc/fstab entry
[{ipaddress}:{port}]:/ {mount}/{mountpoint} ceph [name=username,secret=secretkey|secretfile=/path/to/secretfile],[{mount.options}]

/etc/fstab entry
10.206.1.5:6789,10.206.1.6:6789,10.206.1.7:6789:/volumes/_nogroup/622bb766-6ae2-4aa5-ad9c-536a71012245 /data/albert ceph name=aglais-gaia-edr3-20210510-ro,secret=ceph-secret,async,auto,nodev,noexec,nosuid,ro,_netdev 0 0




# -----------------------------------------------------
# -----------------------------------------------------
# Configure Ceph monitor node_exporter
# https://github.com/digitalocean/ceph_exporter
#[user@zeppelin]


    mkdir /tmp/ceph
    cp /etc/ceph/aglais-gaia-edr3-20210510-ro.conf \
       /tmp/ceph/

    cp /etc/ceph/aglais-gaia-edr3-20210510-ro.keyring \
       /tmp/ceph/

    cp /etc/ceph/aglais-gaia-edr3-20210510-ro.keyring \
       /tmp/ceph/ceph.aglais-gaia-edr3-20210510-ro.keyring

    podman run \
        --tty \
        --interactive \
        --env "CEPH_USER=aglais-gaia-edr3-20210510-ro" \
        --env "CEPH_CONFIG=/etc/ceph/aglais-gaia-edr3-20210510-ro.conf" \
        --publish 9128:9128 \
        --volume /tmp/ceph:/etc/ceph:ro,z \
        digitalocean/ceph_exporter


    cat /etc/ceph/aglais-gaia-edr3-20210510-ro.conf

    >   [client.aglais-gaia-edr3-20210510-ro]
    >       client quota = true
    >       mon host = 10.206.1.5:6789,10.206.1.6:6789,10.206.1.7:6789
    >       key = ceph-secret
    

    /bin/ceph_exporter \
        -ceph.user   aglais-gaia-edr3-20210510-ro \
        -ceph.config /etc/ceph/aglais-gaia-edr3-20210510-ro.conf

    >   2021/07/03 03:49:43 Starting ceph exporter on ":9128"


    curl http://localhost:9128/metrics

    >   # HELP ceph_active_pgs No. of active PGs in the cluster
    >   # TYPE ceph_active_pgs gauge
    >   ceph_active_pgs{cluster="ceph"} 2808
    >   # HELP ceph_backfill_wait_pgs No. of PGs in the cluster with backfill_wait state
    >   # TYPE ceph_backfill_wait_pgs gauge
    >   ceph_backfill_wait_pgs{cluster="ceph"} 0
    >   # HELP ceph_backfilling_pgs No. of backfilling PGs in the cluster
    >   # TYPE ceph_backfilling_pgs gauge
    >   ceph_backfilling_pgs{cluster="ceph"} 0
    >   ....
    >   ....
    >   # HELP process_resident_memory_bytes Resident memory size in bytes.
    >   # TYPE process_resident_memory_bytes gauge
    >   process_resident_memory_bytes 2.7459584e+07
    >   # HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
    >   # TYPE process_start_time_seconds gauge
    >   process_start_time_seconds 1.62528418333e+09
    >   # HELP process_virtual_memory_bytes Virtual memory size in bytes.
    >   # TYPE process_virtual_memory_bytes gauge
    >   process_virtual_memory_bytes 1.249886208e+09

    # Allow monitor to read port 8128 on zeppelin
    # Allow port 8128 from gaia-dev-20210702-monitor-security 

# -----------------------------------------------------
# Read the metrics from monitor.
#[user@monitor]

    curl http://zeppelin:9128/metrics


    # Add zeppelin:8128 to list in prometheus.conf    
    
    sudo vi /etc/prometheus/prometheus.conf    

        ....
        ....
        scrape_configs:
          - job_name: 'prometheus'
            scrape_interval: 5s
            static_configs:
              - targets: ['monitor:9090']
          - job_name: 'node_exporter'
            scrape_interval: 5s
            static_configs:
              - targets:
                  - 'worker01:9100'
                  - 'worker02:9100'
                  - 'worker03:9100'
                  - 'worker04:9100'
                  - 'master01:9100'
                  - 'zeppelin:9100'
                  - 'zeppelin:9128'
    
    # Restart Prometheus
    systemctl restart prometheus
    systemctl status  prometheus

    >   ● prometheus.service - prometheus
    >      Loaded: loaded (/etc/systemd/system/prometheus.service; enabled; vendor preset: disabled)
    >      Active: active (running) since Fri 2021-07-02 16:40:45 UTC; 11h ago
    >    Main PID: 21174 (prometheus)
    >       Tasks: 9 (limit: 3890)
    >      Memory: 298.5M
    >      CGroup: /system.slice/prometheus.service
    >              └─21174 /usr/local/bin/prometheus --config.file=/etc/prometheus/prometheus.conf --storage.tsdb.path=/data/prometheus --storage.tsdb.retention=2d
    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------

    Explore the metrics in Grafana
    

Took 0 sec. Last updated by zrq at July 04 2021, 5:01:08 AM.
Took 0 sec. Last updated by zrq at July 04 2021, 5:12:59 AM.
datediff --format '%Hhr %Mmin %Ssec' '5:01:08' '5:12:59'
        



