#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2022, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#

    Target:

        Test deployment to debug Shiro database.

    Result:

        Work in progress ...

        Broken parts of JDBC Shiro scripts (creates tables twice).
        Inserted test users manually.
        Zeppelin unable to contact Spark on master.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name ansibler \
        --hostname ansibler \
        --publish 3000:3000 \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/deployments:/deployments:ro,z" \
        ghcr.io/wfau/atolmis/ansible-client:2022.03.19 \
        bash


# -----------------------------------------------------
# Set the target configuration.
#[root@ansibler]

    cloudbase='arcus'
    cloudname='iris-gaia-blue'
    configname=zeppelin-54.86-spark-6.26.43


# -----------------------------------------------------
# Delete everything.
#[root@ansibler]

    time \
        /deployments/openstack/bin/delete-all.sh \
            "${cloudname:?}"

    >   real    4m1.865s
    >   user    1m41.456s
    >   sys     0m11.113s


# -----------------------------------------------------
# Create everything.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-all.sh \
            "${cloudname:?}" \
            "${configname:?}" \
        | tee /tmp/create-all.log

    >   real    35m59.088s
    >   user    9m52.643s
    >   sys     2m23.472s


# -----------------------------------------------------
# Create (test) users.
#[root@ansibler]

    time \
        /deployments/hadoop-yarn/bin/create-users.sh \
            "${cloudname:?}" \
            "${configname:?}"   \
            "test"   \
        | tee /tmp/create-users.log

    >   ....
    >   TASK [Import Zeppelin user data] ***********************************************
    >   fatal: [zeppelin]: FAILED! => {"changed": false, "msg": "ERROR 1050 (42S01) at line 2: Table 'users' already exists\n"}
    >   ....

    #
    # Fixed broken parts of JDBC Shiro scripts.
    #


# -----------------------------------------------------
# Quick test with one user.
#[root@ansibler]

    numusers=1
    testlevel=basic

    concurrent=True
    testdate=$(date '+%Y%m%d-%H%M%S')

    time \
        /deployments/hadoop-yarn/bin/run-tests.sh \
            "${cloudname:?}"  \
            "${configname:?}" \
            "${testlevel:?}"  \
	        "${concurrent:?}" \
	        "${numusers:?}"  \
        | tee /tmp/test-${testlevel:?}-${testdate:?}.log

    sed "
        1,3 d
        s/\"/#/g
        s/'\(-\{0,1\}[0-9.]\{1,\}\)'/\1/g
        s/:[[:space:]]*\([a-zA-Z]\{1,\}\)\([,}]\)/:'\1'\2/g
        s/:[[:space:]]*\([,}]\),/: ''\1/g
        s/'/\"/g
        " \
        '/tmp/test-result.json' \
    | jq '.' \
    | tee /tmp/test-${testlevel:?}-${testdate:?}.json


    >   ....
    >   ....
    >   TASK [Run benchmarker] *********************************************************
    >   changed: [
    >       localhost] => {
    >           "changed": true,
    >           "cmd": "python3 /tmp/run-test.py | tee /tmp/test-result.json",
    >           "delta": "0:00:04.763916",
    >           "end": "2022-05-11 03:01:11.734516",
    >           "msg": "",
    >           "rc": 0,
    >           "start": "2022-05-11 03:01:06.970600",
    >           "stderr": "
    >               ERROR:root:list index out of range
    >               Traceback (most recent call last):
    >                 File \"/usr/local/lib/python3.10/site-packages/aglais_benchmark/aglais_benchmark.py\", line 83, in run_notebook
    >                 notebookid = text.split(\": \")[1]
    >               IndexError: list index out of range
    >               ERROR:root:list index out of range
    >               Traceback (most recent call last):
    >                 File \"/usr/local/lib/python3.10/site-packages/aglais_benchmark/aglais_benchmark.py\", line 83, in run_notebook
    >                 notebookid = text.split(\": \")[1]
    >               IndexError: list index out of range
    >               ERROR:root:list index out of range
    >   ....
    >   ....


    #
    # Checked in code does not run.
    #
    # create-users.sh is not idempotent, it tries to create the database every time it is run.
    # auth.sql and auth-test.sql fail because they both contain the "CREATE TABLE users ..."
    # which has already been done by "38-install-user-db.yml" calling "create.sql"
    #


# -----------------------------------------------------
# Try using our curl tests.
#[root@ansibler]

    zeppelinhost=128.232.222.6
    zeppelinport=8080
    zeppelinurl=http://${zeppelinhost:?}:${zeppelinport:?}

    source /deployments/zeppelin/test/bin/rest-tests.sh


# -----------------------------------------------------
# Login to Zeppelin as a normal user.
#[root@ansibler]

    gaiauser=gaiauser2
    gaiapass=gaiapass2

    zeplogin "${gaiauser:?}" "${gaiapass}"

    >   {
    >     "status": "FORBIDDEN",
    >     "message": ""
    >   }

    #
    # Tried different combinations.
    # No luck.
    #


# -----------------------------------------------------
# Configure the database passwords.
#[root@ansibler]

    ssh zeppelin \
        '
        cat > /home/fedora/mariadb.cnf << EOF
[client]
user = zeppelin
password = ........
EOF

        ln -s \
            /home/fedora/mariadb.cnf \
            /home/fedora/.my.cnf
        '


# -----------------------------------------------------
# Hash our password.
#[root@ansibler]

    dnf install java-latest-openjdk

    mkdir ~/frog
    pushd ~/frog

	    wget https://repo1.maven.org/maven2/org/apache/shiro/tools/shiro-tools-hasher/1.9.0/shiro-tools-hasher-1.9.0-cli.jar

	    java -jar shiro-tools-hasher-1.9.0-cli.jar -pnc

    popd

    username='gamestop'
    password='........'
    passhash='$shiro1$SHA-256$500000$uAtUUYAYJdHFZdcubPI32g==$tkvtpVWtVqObz25XOL9WARy4+WFJqlwTKCCzYf1dI4o='

# -----------------------------------------------------
# Add our own user accounts.
#[root@ansibler]

    ssh zeppelin \
        "
        mysql --execute \
            '
            use zeppelin ;
            show tables ;
            '
        "

    ssh zeppelin \
        "
        mysql --execute \
            \"
            use zeppelin ;
            DELETE FROM users WHERE username = '${username:?}' ;
            DELETE FROM user_roles WHERE username = '${username:?}' ;
            \"
        "

    ssh zeppelin \
        "
        mysql --execute \
            '
            use zeppelin ;
            INSERT INTO users (username, password) VALUES (\"${username:?}\", \"${passhash:?}\");
            INSERT INTO user_roles (username, role_name) VALUES (\"${username:?}\", \"user\");
            '
        "

    ssh zeppelin \
        "
        mysql --execute \
            '
            use zeppelin ;
            SELECT * FROM users ;
            SELECT * FROM user_roles ;
            '
        "

# -----------------------------------------------------
# Login to Zeppelin as a normal user.
#[root@ansibler]

    zeplogin "${username:?}" "${password:?}"

    >   {
    >     "status": "OK",
    >     "message": "",
    >     "body": {
    >       "principal": "gamestop",
    >       "ticket": "a42cfc33-de34-4762-8fb7-279fba293113",
    >       "roles": "[\"user\"]"
    >     }
    >   }


# -----------------------------------------------------
# Run the HealpixSourceCounts notebook
#[root@ansibler]

    noteid=2H1TF42A3

    zepnbclear     ${noteid}
    zepnbexecstep  ${noteid}
    zepnbstatus    ${noteid}
    zepnbtotaltime ${noteid}

    >   ....
    >   ERROR [2022-05-11 05:11:11,319] ({FIFOScheduler-interpreter_196503570-Worker-1} Logging.scala[logError]:94) - Error initializing SparkContext.
    >   java.net.ConnectException: Call From iris-gaia-blue-20220511-zeppelin/10.10.3.119 to master01:9000 failed on connection exception: java.net.ConnectException: Connection refused; For more details see:  http://wiki.apache.org/hadoop/ConnectionRefused
    >   	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    >   ....

    #
    # Zeppelin PySpark notebook cell unable to connect to Spark master node.
    # Not clear why.
    # At least one worker failed.
    # Not clear why.
    #

